{"ast":null,"code":"var _jsxFileName = \"/home/hishamls/0-webProjects/ReactProjects/food-order/01-starting-project/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport CartContext from \"./Cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      {\n        const {\n          id,\n          amount,\n          price\n        } = action.item;\n        const existingCartItemIndex = state.items.findIndex(item => item.id === id);\n        const updatedItems = [...state.items];\n        if (existingCartItemIndex !== -1) {\n          const existingCartItem = updatedItems[existingCartItemIndex];\n          updatedItems[existingCartItemIndex] = {\n            ...existingCartItem,\n            amount: existingCartItem.amount + amount\n          };\n        } else {\n          updatedItems.push(action.item);\n        }\n        const updatedTotalAmount = state.totalAmount + price * amount;\n        return {\n          items: updatedItems,\n          totalAmount: updatedTotalAmount\n        };\n      }\n    case \"REMOVE\":\n      {\n        //checks if the item already exists in the cart\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n        if (existingCartItemIndex === -1) {\n          //-1, it means that the item does not exist in the cart.\n          return state;\n        }\n        //updating the amount by adding the amount from the action.\n        const existingCartItem = state.items[existingCartItemIndex];\n        let updatedItems;\n        if (existingCartItem.amount === 1) {\n          updatedItems = state.items.filter(item => item.id !== action.id);\n        } else {\n          const updatedItem = {\n            ...existingCartItem,\n            amount: existingCartItem.amount - 1\n          };\n          updatedItems = [...state.items];\n          updatedItems[existingCartItemIndex] = updatedItem;\n        }\n        const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n        return {\n          items: updatedItems,\n          totalAmount: updatedTotalAmount\n        };\n      }\n    default:\n      return state;\n  }\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","id","amount","price","item","existingCartItemIndex","findIndex","updatedItems","existingCartItem","push","updatedTotalAmount","filter","updatedItem","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hishamls/0-webProjects/ReactProjects/food-order/01-starting-project/src/store/CartProvider.js"],"sourcesContent":["import CartContext from \"./Cart-context\";\nimport { useReducer } from \"react\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\": {\n      const { id, amount, price } = action.item;\n      const existingCartItemIndex = state.items.findIndex(\n        (item) => item.id === id\n      );\n      const updatedItems = [...state.items];\n\n      if (existingCartItemIndex !== -1) {\n        const existingCartItem = updatedItems[existingCartItemIndex];\n        updatedItems[existingCartItemIndex] = {\n          ...existingCartItem,\n          amount: existingCartItem.amount + amount,\n        };\n      } else {\n        updatedItems.push(action.item);\n      }\n\n      const updatedTotalAmount = state.totalAmount + price * amount;\n\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount,\n      };\n    }\n\n    case \"REMOVE\": {\n      //checks if the item already exists in the cart\n      const existingCartItemIndex = state.items.findIndex(\n        (item) => item.id === action.id\n      );\n\n      if (existingCartItemIndex === -1) {\n        //-1, it means that the item does not exist in the cart.\n        return state;\n      }\n      //updating the amount by adding the amount from the action.\n      const existingCartItem = state.items[existingCartItemIndex];\n      let updatedItems;\n\n      if (existingCartItem.amount === 1) {\n        updatedItems = state.items.filter((item) => item.id !== action.id);\n      } else {\n        const updatedItem = {\n          ...existingCartItem,\n          amount: existingCartItem.amount - 1,\n        };\n\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      }\n\n      const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}